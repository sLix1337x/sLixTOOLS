name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          npm install --save-dev vite @vitejs/plugin-react typescript @types/node

      - name: Debug Environment
        run: |
          echo "Node version:"
          node -v
          echo "NPM version:"
          npm -v
          echo "Installed packages:"
          npm list --depth=0

      - name: Build
        env:
          NODE_ENV: production
        run: |
          # Build the app with root path
          echo "Building application with root path..."
          npx vite build --base=/
          
          # Show build output
          echo "Build output:"
          ls -la dist/
          ls -la dist/assets/
          
          # Copy public files
          echo "Copying public files..."
          cp -r public/* dist/ 2>/dev/null || :
          
          # Inject both JS and CSS into index.html
          echo "Modifying index.html to include JS and CSS..."
          
          # Inject CSS first
          CSS_FILES=$(find dist/assets -name "*.css")
          echo "CSS files found: $CSS_FILES"
          for CSS_FILE in $CSS_FILES; do
            CSS_PATH=${CSS_FILE#dist/}
            echo "Injecting CSS: $CSS_PATH"
            sed -i "s|</head>|<link rel=\"stylesheet\" href=\"/$CSS_PATH\">\n</head>|g" dist/index.html
          done
          
          # Then inject main JS
          JS_FILES=$(find dist/assets -name "*.js" | grep -v "polyfills")
          echo "JS files found: $JS_FILES"
          for JS_FILE in $JS_FILES; do
            # Skip unnecessary files
            if [[ "$JS_FILE" != *polyfills* ]]; then
              JS_PATH=${JS_FILE#dist/}
              echo "Injecting JS: $JS_PATH"
              sed -i "s|</body>|<script type=\"module\" src=\"/$JS_PATH\"></script>\n</body>|g" dist/index.html
            fi
          done
          
          # Show modified index.html
          echo "Final index.html content:"
          cat dist/index.html
          
          # Create 404.html for SPA routing
          echo "Creating 404.html for SPA routing..."
          cp dist/index.html dist/404.html
          
          # Show final dist contents
          echo "Final dist contents:"
          find dist -type f | sort
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: skip
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
